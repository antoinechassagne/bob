/**
* GRID
*/

// Grid
.grid {
  display: grid;
  grid-template-columns: repeat($bob-columns, 1fr);
  grid-gap: $bob-gap;
  padding: 0 $bob-gap;
}

.no-gap {
  grid-gap: 0;
}

// Column classes 
@for $i from 1 through $bob-columns {
  .col-start-#{$i}, .cs-#{$i} {
    grid-column-start: $i;
  }

  .col-end-#{$i}, .ce-#{$i} {
    grid-column-end: ($i + 1);
  }
}

// Responsive column classes
@for $i from 1 through $bob-columns {
  @each $index, $attributes in $bob-breakpoints {
    .col-start-#{$i}-#{map-deep-get($bob-breakpoints, $index, suffix)}, .cs-#{$i}-#{str-slice(map-deep-get($bob-breakpoints, $index, suffix), 1, 1)} {
      @media (min-width: #{map-deep-get($bob-breakpoints, $index, min-width)}px) {
        grid-column-start: $i;
      }
    }

    .col-end-#{$i}-#{map-deep-get($bob-breakpoints, $index, suffix)}, .ce-#{$i}-#{str-slice(map-deep-get($bob-breakpoints, $index, suffix), 1, 1)} {
      @media (min-width: #{map-deep-get($bob-breakpoints, $index, min-width)}px) {
        grid-column-end: ($i + 1);
      }
    }
  }
}

// Row classes
@for $i from 1 through $bob-rows {
  .row-start-#{$i}, .rs-#{$i} {
    grid-row-start: $i;
  }

  .row-end-#{$i}, .re-#{$i} {
    grid-row-end: ($i + 1);
  }
}

// Responsive row classes
@for $i from 1 through $bob-rows {
  @each $index, $attributes in $bob-breakpoints {
    .row-start-#{$i}-#{map-deep-get($bob-breakpoints, $index, suffix)}, .rs-#{$i}-#{str-slice(map-deep-get($bob-breakpoints, $index, suffix), 1, 1)} {
      @media (min-width: #{map-deep-get($bob-breakpoints, $index, min-width)}px) {
        grid-row-start: $i;
      }
    }

    .row-end-#{$i}-#{map-deep-get($bob-breakpoints, $index, suffix)}, .re-#{$i}-#{str-slice(map-deep-get($bob-breakpoints, $index, suffix), 1, 1)} {
      @media (min-width: #{map-deep-get($bob-breakpoints, $index, min-width)}px) {
        grid-row-end: ($i + 1);
      }
    }
  }
}